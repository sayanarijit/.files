version: v0.7.0
general:
  default_ui:
    prefix: ' '
    suffix: ''
  focus_ui:
    prefix: ▸
    suffix: ''
    style:
      fg:
        Rgb: [170, 150, 130]
      bg:
        Rgb: [50, 50, 50]
      add_modifiers: [Bold]
  selection_ui:
    prefix: ' '
    suffix: ''
    style:
      fg:
        Rgb: [70, 70, 70]
      add_modifiers: [Bold, CrossedOut]
  sort_and_filter_ui:
    separator:
      format: " » "
  panel_ui:
    default:
      title:
        style:
          bg:
            Rgb: [170, 150, 130]
          fg:
            Rgb: [40, 40, 40]
          add_modifiers: [Bold]
      style:
        fg:
          Rgb: [170, 150, 130]
        bg:
          Rgb: [33, 33, 33]
      borders: []
    help_menu:
      style:
        bg:
          Rgb: [26, 26, 26]

layouts:
  custom: {}
  builtin:
    default:
      Vertical:
        config:
          constraints:
            - Length: 2
            - Min: 1
            - Length: 2
        splits:
          - SortAndFilter: ~
          - Horizontal:
              config:
                constraints:
                  - Percentage: 20
                  - Percentage: 60
                  - Percentage: 20
              splits:
                - Selection: ~
                - Table: ~
                - HelpMenu: ~
          - InputAndLogs: ~
    no_help:
      Vertical:
        config:
          constraints:
            - Length: 2
            - Min: 1
        splits:
          - SortAndFilter: ~
          - Horizontal:
              config:
                constraints:
                  - Percentage: 80
                  - Percentage: 20
              splits:
                - Table: ~
                - Selection: ~
          - InputAndLogs: ~

    no_selection:
      Vertical:
        config:
          constraints:
            - Length: 2
            - Min: 1
            - Length: 2
        splits:
          - SortAndFilter: ~
          - Horizontal:
              config:
                constraints:
                  - Percentage: 80
                  - Percentage: 20
              splits:
                - Table: ~
                - HelpMenu: ~
          - InputAndLogs: ~

    no_help_no_selection:
      Vertical:
        config:
          constraints:
            - Length: 2
            - Min: 1
            - Length: 2
        splits:
          - SortAndFilter: ~
          - Table: ~
          - InputAndLogs: ~
node_types:
  directory:
    meta:
      icon: 
  file:
    meta:
      icon: 
  symlink:
    meta:
      icon: 
  extension:
    lock:
      meta:
        icon: 🔒
    md:
      meta:
        icon: 
    toml:
      meta:
        icon: 
    rs:
      meta:
        icon: 🦀
    elm:
      meta:
        icon: 
    java:
      meta:
        icon: ♨
    kt:
      meta:
        icon: 🅺
    lua:
      meta:
        icon: 🌙
    nix:
      meta:
        icon: ❄️
    js:
      meta:
        icon: 
    py:
      meta:
        icon: 🐍
    txt:
      meta:
        icon: 
    csv:
      meta:
        icon: 
    xlsx:
      meta:
        icon: 
    odf:
      meta:
        icon: 
    yml:
      meta:
        icon: ⚙
    yaml:
      meta:
        icon: ⚙
  special:
    docker-compose.yml:
      meta:
        icon: 🐳
    .git:
      meta:
        icon: 
    node_modules:
      meta:
        icon: 

modes:
  custom:
    fzxplr:
      name: fzxplr
      key_bindings:
        remaps:
          /: F  # Remap "/" to "f"
        on_key:
          F:
            help: search
            messages:
              - BashExec: |
                  PTH=$(cat "${XPLR_PIPE_DIRECTORY_NODES_OUT:?}" | awk -F/ '{print $NF}' | fzf --preview 'pistol {}')
                  if [ -d "$PTH" ]; then
                    echo "ChangeDirectory: ${PWD:?}/${PTH:?}" >> "${XPLR_PIPE_MSG_IN:?}"
                  elif [ -f "$PTH" ]; then
                    echo "FocusPath: ${PWD:?}/${PTH:?}" >> "${XPLR_PIPE_MSG_IN:?}"
                  fi
              - SwitchMode: default
        default:
          messages:
            - SwitchMode: default
    paste.rs:
      name: paste.rs
      key_bindings:
        on_key:
          p:
            help: paste
            messages:
              - BashExec: |
                  PTH="$(basename ${XPLR_FOCUS_PATH:?})"
                  DEST="${XPLR_SESSION_PATH:?}/paste.rs.list"
                  curl --data-binary "@${PTH:?}" "https://paste.rs" | tee -a "${DEST:?}"
                  echo
                  read -p "[enter to continue]"
              - SwitchMode: default
          l:
            help: list
            messages:
              - BashExec: |
                  cat "${XPLR_SESSION_PATH:?}/paste.rs.list"
                  echo
                  read -p "[enter to continue]"
              - SwitchMode: default
          o:
            help: search and open
            messages:
              - BashExec: |
                  DEST="${XPLR_SESSION_PATH:?}/paste.rs.list"
                  URL=$(fzf --preview "curl -s {}" < "${DEST:?}")
                  if [ "$URL" ]; then
                    OPENER=$(which xdg-open)
                    ${OPENER:-open} "${URL:?}"
                  fi
              - SwitchMode: default
          d:
            help: search and delete
            messages:
              - BashExec: |
                  DEST="${XPLR_SESSION_PATH:?}/paste.rs.list"
                  URL=$(fzf --preview "curl -s {}" < "${DEST:?}")
                  if [ "$URL" ]; then
                    curl -X DELETE "${URL:?}"
                    sd "${URL:?}\n" "" "${DEST:?}"
                    echo
                    read -p "[enter to continue]"
                  fi
              - SwitchMode: default
        default:
          messages:
            - SwitchMode: default
    qrcp:
      name: qrcp
      key_bindings:
        on_key:
          s:
            help: send
            messages:
              - BashExec: |
                  qrcp send --keep-alive -- $(cat "${XPLR_PIPE_RESULT_OUT:?}")
              - SwitchMode: default
          r:
            help: receive
            messages:
              - BashExec: |
                  qrcp receive --keep-alive
              - SwitchMode: default
        default:
          messages:
            - SwitchMode: default
    copy:
      name: copy
      key_bindings:
        on_key:
          y:
            help: copy focused file
            messages:
              - BashExecSilently: |
                  xclip-copyfile $(cat "${XPLR_PIPE_RESULT_OUT:?}")
              - SwitchMode: default
        default:
          messages:
            - SwitchMode: default

    organise:
      key_bindings:
        on_key:
          u:
            help: dry run undo
            messages:
              - BashExec: |
                  f2 -u
                  read -p '[press enter to continue]'

          U:
            help: undo
            messages:
              - BashExecSilently: |
                  f2 -u -x
              - Explore
          b:
            help: dry run org books
            messages:
              - BashExec: |
                  f2 -F -r '{{xt.Title}} by {{xt.Creator}}{{ext}}'
                  read -p '[press enter to continue]'
          B:
            help: org books
            messages:
              - BashExecSilently: |
                  f2 -F -r '{{xt.Title}} by {{xt.Creator}}{{ext}}' -x
              - Explore
          m:
            help: dry run org music
            messages:
              - BashExec: |
                  f2 -F -f '(\d+).*' -r '{{id3.artist}}/{{id3.album}}/$1-{{id3.title}}{{ext}}'
                  read -p '[press enter to continue]'
          M:
            help: org music
            messages:
              - BashExecSilently: |
                  f2 -F -f '(\d+).*' -r '{{id3.artist}}/{{id3.album}}/$1-{{id3.title}}{{ext}}' -x
              - Explore
          i:
            help: dry run org images
            messages:
              - BashExec: |
                  f2 -F -r '{{x.dt.YYYY}}/{{x.dt.MMM}}-{{x.dt.DD}}-{{x.dt.YYYY}}_{{x.dt.H}}-{{x.dt.mm}}-{{x.dt.ss}}_{{x.make}}-{{x.model}}{{ext}}'
                  read -p '[press enter to continue]'
          I:
            help: org images
            messages:
              - BashExecSilently: |
                  f2 -F -r '{{x.dt.YYYY}}/{{x.dt.MMM}}-{{x.dt.DD}}-{{x.dt.YYYY}}_{{x.dt.H}}-{{x.dt.mm}}-{{x.dt.ss}}_{{x.make}}-{{x.model}}{{ext}}' -x
              - Explore
        default:
          messages:
            - SwitchModeBuiltin: default

  builtin:
    default:
      key_bindings:
        on_key:
          '#':
            help: debug
            messages:
              - Debug: /tmp/xplr.yml
          F:
            help: fzf mode
            messages:
              - SwitchMode: fzxplr
          y:
            help: copy
            messages:
              - SwitchMode: copy
          p:
            help: paste
            messages:
              - BashExecSilently: |
                  xclip-pastefile > /dev/null && echo Explore >> "${XPLR_PIPE_MSG_IN:?}"
          P:
            help: paste.rs
            messages:
              - SwitchMode: paste.rs
          m:
            help: bookmark
            messages:
              - BashExecSilently: |
                  PTH="${XPLR_FOCUS_PATH:?}"
                  if echo "${PTH:?}" >> "${XPLR_SESSION_PATH:?}/bookmarks"; then
                    echo "LogSuccess: ${PTH:?} added to bookmarks" >> "${XPLR_PIPE_MSG_IN:?}"
                  else
                    echo "LogError: Failed to bookmark ${PTH:?}" >> "${XPLR_PIPE_MSG_IN:?}"
                  fi
          '`':
            help: go to bookmark
            messages:
              - BashExec: |
                  PTH=$(cat "${XPLR_SESSION_PATH:?}/bookmarks" | fzf --no-sort)
                  if [ "$PTH" ]; then
                    echo "FocusPath: ${PTH:?}" >> "${XPLR_PIPE_MSG_IN:?}"
                  fi
          ctrl-h:
            help: history
            messages:
              - BashExec: |
                  PTH=$(cat "${XPLR_PIPE_HISTORY_OUT:?}" | sort -u | fzf --no-sort)
                  if [ "$PTH" ]; then
                    echo "ChangeDirectory: ${PTH:?}" >> "${XPLR_PIPE_MSG_IN:?}"
                  fi
          R:
            help: batch rename
            messages:
              - BashExec: |
                  SELECTION=$(cat "${XPLR_PIPE_SELECTION_OUT:?}")
                  NODES=${SELECTION:-$(cat "${XPLR_PIPE_DIRECTORY_NODES_OUT:?}")}
                  if [ "$NODES" ]; then
                    mmv -- $NODES
                    echo Explore >> "${XPLR_PIPE_MSG_IN:?}"
                  fi
          Q:
            help: send/receive via QR
            messages:
              - SwitchMode: qrcp
          S:
            help: serve $PWD
            messages:
              - BashExec: |
                  IP=$(ip addr | grep -w inet | cut -d/ -f1 | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | fzf --prompt 'Select IP > ')
                  echo "IP: ${IP:?}"
                  read -p "Port (default 5000): " PORT
                  echo
                  sfz --all --cors --no-ignore --bind ${IP:?} --port ${PORT:-5000} . &
                  sleep 1 && read -p '[press enter to continue]'
                  kill -9 %1
          D:
            help: disk usage
            messages:
              - BashExec:
                  dua i
              - ClearScreen
          ctrl-n:
            help: new session
            messages:
              - BashExecSilently: |
                  alacritty --command xplr &

          O:
            help: organise files
            messages:
              - SwitchModeCustom: organise

