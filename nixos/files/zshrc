setopt hist_ignore_space

export LC_ALL="en_US.UTF-8"

export EDITOR="nvim"
export NIX_PATH="$HOME/.nix-defexpr/channels${NIX_PATH:+:}$NIX_PATH"
export XDG_CURRENT_DESKTOP="KDE"
export KDE_SESSION_VERSION="5"
export GTK_USE_PORTAL="1"
export GPG_TTY="$(tty)"

export NNN_PLUG="p:preview-tabbed"
export NNN_FIFO="/tmp/nnn.fifo"
export USE_VIDEOTHUMB="1"
export TERMINAL="wezterm"

export CHROME_EXECUTABLE="google-chrome-stable"
export FLUTTER_SDK="$HOME/snap/flutter/common/flutter/bin"

export ZK_NOTEBOOK_DIR="$HOME/GitHub/sayanarijit.github.io/src/site/notes/"

alias venv="python -m venv .venv && activate"
alias activate="source .venv/bin/activate"
alias reactivate="deactivate && activate"
alias github="cd ~/GitHub"
# alias open="xdg-open"  # Use https://github.com/Byron/open-rs

alias dotdiff="(cd ~/.files && make diff)"
alias dotreset="(cd ~/.files && make reset)"
alias dotsync="(cd ~/.files && make sync)"

# Getting rusty
alias l="lsd"
alias ll="lsd -l"
alias la="lsd -la"
alias c="bat"
alias m="mind"
alias x="xplr"
alias f="fzf"
alias "cargo-examples"='for e in $(ls examples); do cargo run --example ${e%.*}; done'
alias xcd='cd "$(xplr --print-pwd-as-result)"'

bindkey -s '^X' 'xcd\n'
# bindkey -s '^D' 'exit\n'

# alias nvim='(neovide &)'

export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$HOME/.poetry/bin:$PATH"
export PATH="$PATH:/usr/local/go/bin"
export PATH="$PATH:$HOME/go/bin"
export PATH="$PATH:$HOME/Android/Sdk/tools/bin"
export PATH="$PATH:$HOME/.yarn/bin"
export PATH="$PATH:/var/lib/snapd/snap/bin"
export PATH="$PATH:$HOME/.pub-cache/bin"
export PATH="$PATH:$HOME/.local/bin"

export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools
export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin

export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"

export JAVA_HOME=$HOME/jdk-11
# export JAVA_OPTS='-XX:+IgnoreUnrecognizedVMOptions --add-modules java.se.ee'
export PATH=$JAVA_HOME/bin:$PATH

export DENO_INSTALL="/home/sayanarijit/.deno"
export PATH="$DENO_INSTALL/bin:$PATH"

export GOPATH="$HOME/go"
export MANPAGER='nvim +Man!'

function paste() {
    local file=${1:-/dev/stdin}
    curl --data-binary @${file} https://paste.rs
}

function pomo() {
    arg1=$1
    shift
    args="$*"

    min=${arg1:?Example: pomo 15 Take a break}
    sec=$((min * 60))
    msg="${args:?Example: pomo 15 Take a break}"

    while true; do
        date '+%H:%M' && sleep "${sec:?}" && notify-send -u critical -t 0 -a pomo "${msg:?}"
    done
}

qrcode () {
  local input="$*"
  [ -z "$input" ] && local input="@/dev/stdin"
  curl -d "$input" https://qrcode.show
}

qrsvg () {
  local input="$*"
  [ -z "$input" ] && local input="@/dev/stdin"
  curl -d "$input" https://qrcode.show -H "Accept: image/svg+xml"
}

qrserve () {
  local port=${1:-8080}
  local dir=${2:-.}
  local ip="$(ifconfig | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | fzf --prompt IP:)" \
    && echo http://$ip:$port | qrcode \
    && python -m http.server $port -b $ip -d $dir
}

# https://github.com/sayanarijit/jf
alias str='jf %q'
alias arr='jf "[%*s]"'
alias obj='jf "{%**s}"'

# lipsum () {
#     local paragraphs=${1:-1}
#     local sentences=${1:-1}
#     curl http://metaphorpsum.com/paragraphs/$paragraphs/$sentences
# }


# export PYENV_ROOT="$HOME/.pyenv"
# export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init --path)"

eval "$(luarocks path --lua-version 5.1)"

export LS_COLORS=$(vivid generate catppuccin-frappe)

# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && source "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

[[ -e "$HOME/.nix-profile/etc/profile.d/nix.sh" ]] && source "$HOME/.nix-profile/etc/profile.d/nix.sh"
[[ -e "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh" ]] && source "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"
[[ -e "$HOME/.cargo/env" ]] && source "$HOME/.cargo/env"
